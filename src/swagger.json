{
    "openapi": "3.0.0",
    "info": {
        "tittle": "User Manager",
        "description": "This is a simple API for simulating CRUD of a user class, using TypeScript.",
        "version": "1.0.0",
        "contact": {
            "email": "cirofreitas1995@gmail.com"
        }
    },
    "paths": {
        "/users": {
            "post": {
                "tags": ["User"],
                "summary": "Create a user",
                "description": "Create a new user",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    }
                                },
                                "example": {
                                    "name": "Fulano Alves",
                                    "email": "fulanoAlves@example.com"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created"
                    },
                    "400": {
                        "description": "Email already in use"
                    }
                }
            },
            "get": {
                "tags": ["User"],
                "summary": "Get all users",
                "description": "Get a list of all users",
                "parameters": [{ 
                    "name": "id",
                    "in": "header",
                    "required": true,
                    "description": "Id of the user requesting the users's list"
                }],
                "responses": {
                    "201": {
                        "description": "List of all users"
                    },
                    "400": {
                        "description": "User requesting list is not an admin"
                    }
                }
            }
        },
        "/users/:user_id": {
            "get": {
                "tags": ["User", "user_id"],
                "summary": "Get user profile",
                "description": "Get specified user profile by id",
                "parameters": [{ 
                    "name": "id",
                    "in": "params",
                    "required": true,
                    "description": "Id of the user requested the user"
                }],
                "responses": {
                    "201": {
                        "description": "List resquested user profile"
                    },
                    "404": {
                        "description": "User does not exist"
                    }
                }
            },
            "patch": {
                "tags": ["User", "user_id"],
                "summary": "Turns user admin",
                "description": "Turns specified user as admin through id",
                "parameters": [{ 
                    "name": "id",
                    "in": "params",
                    "required": true,
                    "description": "Id of the user whom will become admin"
                }],
                "responses": {
                    "201": {
                        "description": "User has been turned an admin"
                    },
                    "404": {
                        "description": "User does not exist"
                    }
                }
            }
        }
    }
}
